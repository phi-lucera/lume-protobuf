// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file inquiry.proto (package treasury, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file inquiry.proto.
 */
export const file_inquiry: GenFile = /*@__PURE__*/
  fileDesc("Cg1pbnF1aXJ5LnByb3RvEgh0cmVhc3VyeSLLBQoHSW5xdWlyeRIKCgJpZBgBIAEoCRIMCgR0aWVyGAIgASgJEiMKBHR5cGUYAyABKA4yFS50cmVhc3VyeS5JbnF1aXJ5VHlwZRIeChZwcmltYXJ5Q292ZXJpbmdUcmFkZXJzGAQgAygJEiAKGHNlY29uZGFyeUNvdmVyaW5nVHJhZGVycxgFIAMoCRIXCg9udW1iZXJPZkRlYWxlcnMYBiABKAUSEAoIaXNBY3RpdmUYByABKAgSGAoQc2hvd0lucXVpcnlQb3B1cBgIIAEoCBINCgV0aXRsZRgJIAEoCRIVCg1jbGllbnRBY2NvdW50GAogASgJEhAKCGNsaWVudElEGAsgASgJEhIKCmNsaWVudE5hbWUYDCABKAkSDwoHY29udGFjdBgNIAEoCRITCgtzYWxlc1BlcnNvbhgOIAEoCRIQCgh3aXJlVGltZRgPIAEoBRIaChJ3aXJldGltZUV4cGlyYXRpb24YECABKAUSEwoLY292ZXJTcHJlYWQYESABKAUSDgoGc3ByZWFkGBIgASgFEhsKBGxlZ3MYEyADKAsyDS50cmVhc3VyeS5MZWcSDgoGc3RhdHVzGBQgASgJEg0KBXZlbnVlGBUgASgJEhQKDHRyYW5zYWN0VGltZRgWIAEoBRISCgpleHBpcmVUaW1lGBcgASgFEhkKEWhpdExpZnRFeHBpcmF0aW9uGBggASgFEhMKC3F1b3RlZENvdW50GBkgASgFEhcKD2F1dG9RdW90ZVN0YXR1cxgaIAEoCRIWCg5hY3RpbmdUcmFkZXJJZBgbIAEoCRIUCgxhdXRvUmVqZWN0ZWQYHCABKAgSGAoQYXV0b1JlamVjdFJlYXNvbhgdIAEoCRITCgtlcnJvclJlYXNvbhgeIAEoCRIpCgpzZXR0bGVtZW50GB8gASgLMhUudHJlYXN1cnkuSW5xdWlyeURhdGUiiQQKA0xlZxINCgVsZWdJZBgBIAEoCRISCgppc1VubG9ja2VkGAIgASgIEhwKBHNpZGUYAyABKA4yDi50cmVhc3VyeS5TaWRlEhAKCHF1YW50aXR5GAQgASgFEhQKDGluc3RydW1lbnRJZBgFIAEoCRIUCgxtYXJrZXRTeW1ib2wYBiABKAkSKQoKc2V0dGxlbWVudBgHIAEoCzIVLnRyZWFzdXJ5LklucXVpcnlEYXRlEg0KBXByaWNlGAggASgFEhUKDW9yaWdpbmFsUHJpY2UYCSABKAUSDQoFY292ZXIYCiABKAUSDQoFeWllbGQYCyABKAUSEAoIcG9zaXRpb24YDCABKAUSHAoUbnVtYmVyT2ZEYXlzVG9TZXR0bGUYDSABKAUSGgoSc3RhbmRhcmRTZXR0bGVEYXRlGA4gASgIEgwKBHJpc2sYDyABKAUSEAoIcmVwb1JhdGUYECABKAUSGAoQb3JpZ2luYWxSZXBvUmF0ZRgRIAEoBRIVCg1yZXBvUmF0ZVByaWNlGBIgASgFEhAKCHNlY3RvcklkGBMgASgJEh0KFW9yaWdpbmFsUmVwb1JhdGVQcmljZRgUIAEoBRIcChRyZXBvVXBkYXRlZFRpbWVzdGFtcBgVIAEoBRIoCgptYXJrZXREYXRhGBYgASgLMhQudHJlYXN1cnkuTWFya2V0RGF0YSI3CgtJbnF1aXJ5RGF0ZRIMCgR5ZWFyGAEgASgFEg0KBW1vbnRoGAIgASgFEgsKA2RheRgDIAEoBSLEAQoKTWFya2V0RGF0YRIUCgxtYXB4QmlkUHJpY2UYASABKAUSFAoMbWFweEJpZFlpZWxkGAIgASgFEhYKDm1hcHhPZmZlclByaWNlGAMgASgFEhYKDm1hcHhPZmZlcllpZWxkGAQgASgFEhQKDHR3ZWJCaWRQcmljZRgFIAEoBRIUCgx0d2ViQmlkWWllbGQYBiABKAUSFgoOdHdlYk9mZmVyUHJpY2UYByABKAUSFgoOdHdlYk9mZmVyWWllbGQYCCABKAUqPAoLSW5xdWlyeVR5cGUSEgoOT1JERVJfUFJPUE9TQUwQABIZChVSRUdVTEFSX1FVT1RFX1JFUVVFU1QQASoZCgRTaWRlEggKBFNFTEwQABIHCgNCVVkQAWIGcHJvdG8z");

/**
 * @generated from message treasury.Inquiry
 */
export type Inquiry = Message<"treasury.Inquiry"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string tier = 2;
   */
  tier: string;

  /**
   * @generated from field: treasury.InquiryType type = 3;
   */
  type: InquiryType;

  /**
   * @generated from field: repeated string primaryCoveringTraders = 4;
   */
  primaryCoveringTraders: string[];

  /**
   * @generated from field: repeated string secondaryCoveringTraders = 5;
   */
  secondaryCoveringTraders: string[];

  /**
   * @generated from field: int32 numberOfDealers = 6;
   */
  numberOfDealers: number;

  /**
   * @generated from field: bool isActive = 7;
   */
  isActive: boolean;

  /**
   * @generated from field: bool showInquiryPopup = 8;
   */
  showInquiryPopup: boolean;

  /**
   * @generated from field: string title = 9;
   */
  title: string;

  /**
   * @generated from field: string clientAccount = 10;
   */
  clientAccount: string;

  /**
   * @generated from field: string clientID = 11;
   */
  clientID: string;

  /**
   * @generated from field: string clientName = 12;
   */
  clientName: string;

  /**
   * @generated from field: string contact = 13;
   */
  contact: string;

  /**
   * @generated from field: string salesPerson = 14;
   */
  salesPerson: string;

  /**
   * @generated from field: int32 wireTime = 15;
   */
  wireTime: number;

  /**
   * @generated from field: int32 wiretimeExpiration = 16;
   */
  wiretimeExpiration: number;

  /**
   * @generated from field: int32 coverSpread = 17;
   */
  coverSpread: number;

  /**
   * @generated from field: int32 spread = 18;
   */
  spread: number;

  /**
   * @generated from field: repeated treasury.Leg legs = 19;
   */
  legs: Leg[];

  /**
   * @generated from field: string status = 20;
   */
  status: string;

  /**
   * @generated from field: string venue = 21;
   */
  venue: string;

  /**
   * @generated from field: int32 transactTime = 22;
   */
  transactTime: number;

  /**
   * @generated from field: int32 expireTime = 23;
   */
  expireTime: number;

  /**
   * @generated from field: int32 hitLiftExpiration = 24;
   */
  hitLiftExpiration: number;

  /**
   * @generated from field: int32 quotedCount = 25;
   */
  quotedCount: number;

  /**
   * @generated from field: string autoQuoteStatus = 26;
   */
  autoQuoteStatus: string;

  /**
   * @generated from field: string actingTraderId = 27;
   */
  actingTraderId: string;

  /**
   * @generated from field: bool autoRejected = 28;
   */
  autoRejected: boolean;

  /**
   * @generated from field: string autoRejectReason = 29;
   */
  autoRejectReason: string;

  /**
   * @generated from field: string errorReason = 30;
   */
  errorReason: string;

  /**
   * Updated field
   *
   * @generated from field: treasury.InquiryDate settlement = 31;
   */
  settlement?: InquiryDate;
};

/**
 * Describes the message treasury.Inquiry.
 * Use `create(InquirySchema)` to create a new message.
 */
export const InquirySchema: GenMessage<Inquiry> = /*@__PURE__*/
  messageDesc(file_inquiry, 0);

/**
 * @generated from message treasury.Leg
 */
export type Leg = Message<"treasury.Leg"> & {
  /**
   * @generated from field: string legId = 1;
   */
  legId: string;

  /**
   * @generated from field: bool isUnlocked = 2;
   */
  isUnlocked: boolean;

  /**
   * @generated from field: treasury.Side side = 3;
   */
  side: Side;

  /**
   * @generated from field: int32 quantity = 4;
   */
  quantity: number;

  /**
   * @generated from field: string instrumentId = 5;
   */
  instrumentId: string;

  /**
   * @generated from field: string marketSymbol = 6;
   */
  marketSymbol: string;

  /**
   * @generated from field: treasury.InquiryDate settlement = 7;
   */
  settlement?: InquiryDate;

  /**
   * @generated from field: int32 price = 8;
   */
  price: number;

  /**
   * @generated from field: int32 originalPrice = 9;
   */
  originalPrice: number;

  /**
   * @generated from field: int32 cover = 10;
   */
  cover: number;

  /**
   * @generated from field: int32 yield = 11;
   */
  yield: number;

  /**
   * @generated from field: int32 position = 12;
   */
  position: number;

  /**
   * @generated from field: int32 numberOfDaysToSettle = 13;
   */
  numberOfDaysToSettle: number;

  /**
   * @generated from field: bool standardSettleDate = 14;
   */
  standardSettleDate: boolean;

  /**
   * @generated from field: int32 risk = 15;
   */
  risk: number;

  /**
   * Only included if the quote has a non-standard settle date
   *
   * @generated from field: int32 repoRate = 16;
   */
  repoRate: number;

  /**
   * @generated from field: int32 originalRepoRate = 17;
   */
  originalRepoRate: number;

  /**
   * @generated from field: int32 repoRatePrice = 18;
   */
  repoRatePrice: number;

  /**
   * @generated from field: string sectorId = 19;
   */
  sectorId: string;

  /**
   * @generated from field: int32 originalRepoRatePrice = 20;
   */
  originalRepoRatePrice: number;

  /**
   * @generated from field: int32 repoUpdatedTimestamp = 21;
   */
  repoUpdatedTimestamp: number;

  /**
   * @generated from field: treasury.MarketData marketData = 22;
   */
  marketData?: MarketData;
};

/**
 * Describes the message treasury.Leg.
 * Use `create(LegSchema)` to create a new message.
 */
export const LegSchema: GenMessage<Leg> = /*@__PURE__*/
  messageDesc(file_inquiry, 1);

/**
 * @generated from message treasury.InquiryDate
 */
export type InquiryDate = Message<"treasury.InquiryDate"> & {
  /**
   * @generated from field: int32 year = 1;
   */
  year: number;

  /**
   * @generated from field: int32 month = 2;
   */
  month: number;

  /**
   * @generated from field: int32 day = 3;
   */
  day: number;
};

/**
 * Describes the message treasury.InquiryDate.
 * Use `create(InquiryDateSchema)` to create a new message.
 */
export const InquiryDateSchema: GenMessage<InquiryDate> = /*@__PURE__*/
  messageDesc(file_inquiry, 2);

/**
 * @generated from message treasury.MarketData
 */
export type MarketData = Message<"treasury.MarketData"> & {
  /**
   * @generated from field: int32 mapxBidPrice = 1;
   */
  mapxBidPrice: number;

  /**
   * @generated from field: int32 mapxBidYield = 2;
   */
  mapxBidYield: number;

  /**
   * @generated from field: int32 mapxOfferPrice = 3;
   */
  mapxOfferPrice: number;

  /**
   * @generated from field: int32 mapxOfferYield = 4;
   */
  mapxOfferYield: number;

  /**
   * @generated from field: int32 twebBidPrice = 5;
   */
  twebBidPrice: number;

  /**
   * @generated from field: int32 twebBidYield = 6;
   */
  twebBidYield: number;

  /**
   * @generated from field: int32 twebOfferPrice = 7;
   */
  twebOfferPrice: number;

  /**
   * @generated from field: int32 twebOfferYield = 8;
   */
  twebOfferYield: number;
};

/**
 * Describes the message treasury.MarketData.
 * Use `create(MarketDataSchema)` to create a new message.
 */
export const MarketDataSchema: GenMessage<MarketData> = /*@__PURE__*/
  messageDesc(file_inquiry, 3);

/**
 * @generated from enum treasury.InquiryType
 */
export enum InquiryType {
  /**
   * @generated from enum value: ORDER_PROPOSAL = 0;
   */
  ORDER_PROPOSAL = 0,

  /**
   * @generated from enum value: REGULAR_QUOTE_REQUEST = 1;
   */
  REGULAR_QUOTE_REQUEST = 1,
}

/**
 * Describes the enum treasury.InquiryType.
 */
export const InquiryTypeSchema: GenEnum<InquiryType> = /*@__PURE__*/
  enumDesc(file_inquiry, 0);

/**
 * @generated from enum treasury.Side
 */
export enum Side {
  /**
   * @generated from enum value: SELL = 0;
   */
  SELL = 0,

  /**
   * @generated from enum value: BUY = 1;
   */
  BUY = 1,
}

/**
 * Describes the enum treasury.Side.
 */
export const SideSchema: GenEnum<Side> = /*@__PURE__*/
  enumDesc(file_inquiry, 1);

